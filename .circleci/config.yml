version: 2.1

workflows: 
  version: 2
  build: 
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - deploy:
          filters:
            branches:
              only:
                - main
          requires:
            - build


jobs:
  build: 
    working_directory: ~/contact-client
    docker:
      - image: node:22-alpine
    steps:
      - checkout
      - setup_remote_docker:
          version: '20.10.7'
          docker_layer_caching: true
      - run:
          name: install-npm
          command: 'npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run: 
          name: Install NPM dependencies
          command: npm install
      - run:
          name: build-react-app
          command: npm run build
      - run:
          name: docker-login
          command: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: Build Docker Image
          command: docker build -t $IMAGE_NAME:latest . || (echo "Docker build failed"; tail -n 20 /root/.npm/_logs/*)
      - run:
          name: Publish Docker Image
          command: docker push $IMAGE_NAME
      - run: 
          name: set-environment-variables
          command: echo $SERVER > server.crt && echo $PRIVATE_KEY > privatekey.pem
      - run: 
          name: build-docker-image-for-integration-environment
          command: docker create -p 8443:8443 --name integration_app $IMAGE_NAME
      - run: 
          name: copy-sever-cert-and-private-key-accross
          command: docker cp ./privatekey.pem integration_app:/privatekey.pem; docker cp ./server.crt integration_app:/server.crt
      - run: 
          name: start-docker-container
          command: docker start integration_app

  
  deploy:
    docker:
      - image: node:22-alpine
    steps:
      - run:
          name: deploy-application
          command: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "export SERVER=\"$SERVER\"; export IMAGE_NAME=\"$IMAGE_NAME\"; export PRIVATE_KEY=\"$PRIVATE_KEY\"; rm -rf ~/contact-client/; git clone https://github.com/monikalazarova/contact-client.git; cd contact-client; git pull origin main; bash deploy.sh;"

 